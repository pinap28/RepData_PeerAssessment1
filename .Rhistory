data <- read.csv("activity.csv")
summary(data)
names(data)
class(data)
class(data[,1])
class(data[,2])
class(data[,3])
head(data)
data[,2] <- as.Date(data[,2], format = "%m/%d/%Y")
class(data[,2])
head(data)
data <- read.csv("activity.csv")
data[,2] <- as.Date(data[,2], format = "%Y/%m/%d")
class(data[,2])
head(data)
data <- read.csv("activity.csv")
head(data)
format(data[,2])
as.Date[data[1,2], format = "%Y/%m/%d"]
data[1,2]
data <- read.csv("activity.csv")
data[,2] <- as.Date(data[,2], format = "%Y-%m-%d")
head(data)
class(data[,2])
source('~/.active-rstudio-document', echo=TRUE)
sum <- tapply(data[,1], data$date, sum)
sum
hist(sum)
totalStepDay <- tapply(data[,1], data$date, sum)
hist(totalStepDay)
totalStepDay <- tapply(data[,1], data$date, sum)
hist(totalStepDay, xlab = "Total Steps per Day",
main = "Histogram of Total Steps per Day")
mean(totalStepDay)
median(totalStepDay)
mean(totalStepDay, na.rm = TRUE)
median(totalStepDay, na.rm = TRUE)
mean(totalStepDay, na.rm = TRUE)
median(totalStepDay, na.rm = TRUE)
mean(totalStepDay, na.rm = TRUE, digits = 2)
median(totalStepDay, na.rm = TRUE)
mean(totalStepDay, na.rm = TRUE, digits = 1)
median(totalStepDay, na.rm = TRUE)
mean(totalStepDay, na.rm = TRUE)
median(totalStepDay, na.rm = TRUE)
meanStepInterval <- tapply(data[,1], data$interval, mean)
meanStepInterval
length(meanStepInterval)
288 * 5
1440 / 60
meanStepInterval <- tapply(data[,1], data$interval, mean(na.rm =TRUE))
meanStepInterval <- tapply(data[,1], data$interval, mean(,na.rm =TRUE))
meanStepInterval <- tapply(data[,1], data$interval, mean())
meanStepInterval <- tapply(data[,1], data$interval, mean)
meanStepInterval
meanStepInterval <- tapply(data[,1], data$interval, sum)
meanStepInterval
data[,1]
head(data)
meanStepInterval <- tapply(data[,1], data$interval, sum)
meanStepInterval
meanStepInterval <- tapply(data[,1], data$interval, mean)
meanStepInterval
meanStepInterval <- aggregate(data[,1], data$interval, mean, na.rm = TRUE)
meanStepInterval <- aggregate(data$steps, data$interval, mean, na.rm = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
date$interval <- as.factor(date$interval)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm=TRUE)
meanStepInterval
source('~/.active-rstudio-document', echo=TRUE)
meanStepInterval
max(meanStepInterval)
head(meanStepInterval)
summary(meanStepInterval)
class(meanStepInterval)
names(meanStepInterval)
names(max(meanStepInterval))
names(meanStepInterval == max(meanStepInterval))
names(meanStepInterval[max(meanStepInterval)])
meanStepInterval[1705]
meanStepInterval
max(meanStepInterval)
pos(max(meanStepInterval))
index(max(meanStepInterval))
names(meanStepInterval)
x <- names(meanStepInterval)
x
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
intervals <- names(meanStepInterval)
plot(meanStepInterval, intervals, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
axis(1, at = seq(10, 2400, by = 5), las=2)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
axis(1, at = seq(10, 2400, by = 100), las=2)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
axis(1, at = seq(10, 2400, by = 10), las=2)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, at = seq(0, 2400, by = 60), las=2)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, at = seq(0, 24, by = 1), las=2)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, at = seq(0, 24, by = 1), las=20)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, at = seq(0, 240, by = 1), las=20)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, at = seq(0, 240, by = 1))
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
names(meanStepInterval)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
axis(1, names(meanStepInterval)
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
axis(1, names(meanStepInterval))
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps", xaxt = "n")
axis(1, names(meanStepInterval))
meanStepInterval <- tapply(data[,1], data$interval, mean, na.rm = TRUE)
plot(meanStepInterval, type = "l", main = "Time series plot", xlab = "5-minute interval", ylab = "Average number of steps")
match(meanStepInterval, max(meanStepInterval))
which (max(meanStepInterval) %in% meanStepInterval)
which (max(meanStepInterval)==meanStepInterval)
which (meanStepInterval==max(meanStepInterval))
names(which (meanStepInterval==max(meanStepInterval)))
x <- names(which (meanStepInterval==max(meanStepInterval)))
x
max <- which (meanStepInterval==max(meanStepInterval))
max
rownames(max) <- c("Day Time", "Interval number")
class(max)
max
cbind(c("Day Time", "Interval number"),max)
max
length(meanStepInterval)
max
data
head(data)
sum(is.na(data$steps))
sum(is.na(data[,1]))
sum(is.na(data[,2]))
sum(is.na(data[,3]))
sum(is.na(data[,1]))
class(data[,3])
head(data[,3])
meanStepDay$data[2,3]
meanStepInterval$data[2,3]
meanStepInterval$"5"
x <- as.character(data[4,3])
meanStepInterval$x
meanStepInterval[4]
h <- (max * 5) / 60
h
m <- (max * 5) % 60
m <- (max * 5) %% 60
m
h <- (max * 5) %/% 60
h
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
time <- as.character(h) + ":" + as.character(m)
time
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
t <- as.character(h) + ":" + as.character(m)
t
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
t <- as.character(h) + as.character(m)
t
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
t <- paste(as.character(h), as.character(m), sep = ":")
t
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
t <- paste(as.character(h), as.character(m), sep = ":")
t
max
max <- which (meanStepInterval==max(meanStepInterval))
h <- (max * 5) %/% 60
m <- (max * 5) %% 60 -5
t <- paste(as.character(h), as.character(m), sep = ":")
t
max[1]
value(max)
max[1]
coefficients(out)[["max"]]
[["max"]]
coefficients[["max"]]
coefficients(max)[["max"]]
coefficients(max)
coefficients
coef(max)
coef[max]
coef[[max]]
coef[["max"]]
max[max]
max[1]
max[[1]]
nd <- replace(data$steps, )
y <- is.na(data$steps)
y
nd <- replace(data$steps, y, 2)
nd
index <- is.na(data$steps)
newSteps <- replace(data$steps, y, meanStepInterval[data[y,3]])
meanStepInterval[data[y,3]]
length(meanStepInterval[data[y,3]])
data[y,3]
meanStepInterval$data[y,3]
meanStepInterval$as.character(data[y,3])
index <- is.na(data$steps)
newSteps <- replace(data$steps, y, 3)
newSteps
head(newSteps)
newSteps <- replace(data$steps, y, )
n <- meanStepInterval
newSteps <- replace(data$steps, y, n[data[y,3]*60/5])
meanStepInterval[24]
meanStepInterval[288]
meanStepInterval[114]
n <- names(meanStepInterval)
n
cbind(meanStepInterval, n)
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[1,data[y,3]])
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[1,data[index,3]])
meanTime
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[,data[index,3]])
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[data[index,3],1])
data[index,3]
meanTime[data[index,3],]
meanTime[data[index,3],2]
meanTime[data[index,3],1]
meanTime
meanTime[data[3,3],1]
meanTime[data[15000,3],1]
meanTime[data[1,3],1]
meanTime[data[2,3],1]
meanTime[data[17568,3],1]
meanTime[data[17567,3],1]
meanTime[data[17566,3],1]
meanTime[data[17000,3],1]
meanTime[data[17568,3],1]
data[17568,3]
meanTime[2355,1]
meanTime[2350,1]
meanTime[300,1]
meanTime[288,1]
data[15000,3]
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(index == data[,3]),1])
which(index == data[,3])
index
which(index == data[,3])
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(index == meanTime[,2]),1])
meanTime[which(index == meanTime[,2])
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(data[index,3] == meanTime[,2]),1])
which(data[index,3] == meanTime[,2])
index <- is.na(data$steps)
intervalTime <- names(meanStepInterval)
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(meanTime[,2] == data[index,3],1])
which(meanTime[,2] == data[index,3]
data[index,3] in meanTime[,2]
data[index,3] %in% meanTime[,2]
which(data[index,3] %in% meanTime[,2])
meanTime
data[index,3]
index <- is.na(data$steps)
intervalTime <- as.integer(names(meanStepInterval))
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(meanTime[,2] == data[index,3],1])
meanTime
meanTime[which(meanTime[,2] == data[index,3]
index <- is.na(data$steps)
intervalTime <- as.integer(names(meanStepInterval))
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(meanTime[,2] == data[index,3]),1]
index <- is.na(data$steps)
intervalTime <- as.integer(names(meanStepInterval))
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[which(meanTime[,2] == data[index,3]),1])
meanTime[which(meanTime[,2] == data[index,3])
which(meanTime[,2] == data[index,3])
data[index,3] %in% meanTime[,2]
match(data[index,3] %in% meanTime[,2])
match(data[index,3],meanTime[,2])
index <- is.na(data$steps)
intervalTime <- as.integer(names(meanStepInterval))
meanTime <- cbind(meanStepInterval, intervalTime)
newSteps <- replace(data$steps, index, meanTime[ match(data[index,3],meanTime[,2]),1])
is.na(newSteps)
sum(is.na(newSteps))
head(newSteps)
index <- is.na(data$steps)
intervalTime <- as.integer(names(meanStepInterval))
meanTime <- cbind(meanStepInterval, intervalTime)
newData <- data
newData[,1] <- replace(data$steps, index, meanTime[ match(data[index,3],meanTime[,2]),1])
head(newData)
sum(is.na(newData))
sum(is.na(newData[,1]))
sum(is.na(newData[,2]))
sum(is.na(newData[,3]))
head(meanTime)
newTotalStepDay <- tapply(newData$steps, newData$date, sum)
hist(newTotalStepDay, xlab = "Total Steps per Day", main = "Histogram of Total Steps per Day")
newTotalStepDay <- tapply(newData$steps, newData$date, sum)
hist(newTotalStepDay, xlab = "Total Steps per Day", main = "New Histogram of Total Steps per Day")
mean(newTotalStepDay)
median(newTotalStepDay)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- weekdays(newData[,2])
x
head(x)
x <- weekdays(newData[,2], abbreviate = TRUE)
x
x <- weekdays(newData[,2])
x
names(newData)
newData$week <- as.factor(ifelse(weekday( newData$date) %in c("Saturday","Sunday"), "Weekend", "Weekday"))
newData[,4] <- as.factor(ifelse(weekday( newData$date) %in c("Saturday","Sunday"), "Weekend", "Weekday"))
x <- as.factor(ifelse(weekday( newData$date) %in c("Saturday","Sunday"), "Weekend", "Weekday"))
x <- as.factor(ifelse(weekday(newData$date) %in c("Saturday","Sunday"), "Weekend", "Weekday"))
x <- as.factor(ifelse(weekdays(newData$date) %in c("Saturday","Sunday"), "Weekend", "Weekday"))
x <- as.factor(ifelse(weekdays(newData$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
x
newData$week <- as.factor(ifelse(weekdays(newData$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
names(newData)
source('~/.active-rstudio-document', echo=TRUE)
names(newData)
head(newData)
sum("weekend" %in% newData$weekday)
sum("weekday" %in% newData$weekday)
sum("Weekday" %in% newData$weekday)
newData$weekday <- as.factor(ifelse(weekdays(newData$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
sum("weekday" %in% newData$weekday)
sum("weekend" %in% newData$weekday)
"weekday" %in% newData$weekday
weekdays(newData$date)
Sys.setlocale("LC_TIME", "English")
newData$weekday <- as.factor(ifelse(weekdays(newData$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
Sys.setlocale("LC_TIME", "English")
Sys.setlocale("LC_TIME", "C")
newData$weekday <- as.factor(ifelse(weekdays(newData$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
head(newData)
weekdays(newData$date)
"weekend" %in% newData$weekday
source('~/.active-rstudio-document', echo=TRUE)
newData
y <- "weekday" %in% newData$weekday
y <- sum("weekday" %in% newData$weekday)
y
newData$weekday <- as.factor(ifelse(weekdays(newData$date) %6 == 0, "weekend", "weekday"))
newData$weekday <- as.factor(ifelse(weekdays(newData$date) %%6 == 0, "weekend", "weekday"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
testdat <- data.frame(time = rep(rep(1:10, each = 4), 8),
y = rnorm(320),
gender = factor(rep(rep(c('F', 'M'), each = 80), 2)),
grade = factor(rep(c('1-3', '4-6'), each = 160)),
gp = factor(rep(rep(c('Control', 'Intervention'),
each = 40), 4)))
testmn <- aggregate(y ~ time + gp + gender + grade, data = testdat, FUN =
mean)
xyplot(y ~ time | gender * grade, groups = gp, data = testmn,
type = c('p', 'l'), auto.key = list(space = 'top', lines = TRUE,
points = FALSE, columns = 2))
library(lattice)
testdat <- data.frame(time = rep(rep(1:10, each = 4), 8),
y = rnorm(320),
gender = factor(rep(rep(c('F', 'M'), each = 80), 2)),
grade = factor(rep(c('1-3', '4-6'), each = 160)),
gp = factor(rep(rep(c('Control', 'Intervention'),
each = 40), 4)))
testmn <- aggregate(y ~ time + gp + gender + grade, data = testdat, FUN =
mean)
xyplot(y ~ time | gender * grade, groups = gp, data = testmn,
type = c('p', 'l'), auto.key = list(space = 'top', lines = TRUE,
points = FALSE, columns = 2))
dataMean <- aggregate(y ~ weekday + steps + interval, data = newData, FUN = mean)
dataMean <- aggregate(y ~ interval + weekday + steps, data = newData, FUN = mean)
dataMean <- aggregate(steps ~ interval + weekday, data = newData, FUN = mean)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
dataMean
xyplot(y ~ time | gender * grade, groups = gp, data = testmn,
type = c('p', 'l'), auto.key = list(space = 'top', lines = TRUE,
points = FALSE, columns = 2))
xyplot(steps ~ interval | weekday, groups = gp, data = newData,
type = "l", auto.key = list(space = 'top', lines = TRUE,
points = FALSE, columns = 2))
xyplot(steps ~ interval | weekday, data = newData,
type = "l", auto.key = list(space = 'top', lines = TRUE,
points = FALSE, columns = 2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData,
+        type = "l", auto.key = list(space = 'top', lines = TRUE,
+                                            points = FALSE, columns = 1))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData,
+        type = "l", auto.key = list(space = 'top', lines = TRUE,
+                                            points = FALSE, rows = 2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", auto.key = list(space = 'top', lines = TRUE, points = FALSE, rows = 2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", auto.key = list(space = 'top', lines = TRUE, points = FALSE, rows = 2))
source('~/.active-rstudio-document', echo=TRUE)
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", ylab ="Number of steps")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", grid = "v")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", grid = "h")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", horizontal = "h")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", horizontal = "s")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps")
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(2,1))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday + date, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | date + weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ date + weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = newData, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
library(lattice)
dataMean <- aggregate(steps ~ weekday + interval, data = newData, FUN = mean)
xyplot(steps ~ interval | weekday, data = dataMean, type = "l", xlab = "Interval", ylab = "Number of steps", layout = c(1,2))
dataMean
